<%- include('../layout/admin-header') %>

<!-- Thêm Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

<div class="container-fluid">
  <div class="row">
    <!-- Sidebar -->
    <%- include('../layout/admin-sidebar') %>

    <!-- Main content -->
    <main class="col-md-10 ms-sm-auto px-md-4">
      <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">Quản lý thẻ</h1>
        <div class="btn-toolbar mb-2 mb-md-0">
          <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTagModal">
            <i class="fas fa-plus me-2"></i>Thêm thẻ mới
          </button>
        </div>
      </div>

      <!-- Tags Table -->
      <div class="card">
        <div class="card-body">
          <div class="table-responsive">
            <table class="table table-hover">
              <thead>
                <tr>
                  <th>ID</th>
                  <th>Tên thẻ</th>
                  <th>Slug</th>
                  <th>Mô tả</th>
                  <th>Thao tác</th>
                </tr>
              </thead>
              <tbody>
                <% tags.forEach(tag => { %>
                  <tr>
                    <td><%= tag._id %></td>
                    <td><%= tag.name %></td>
                    <td><%= tag.slug %></td>
                    <td><%= tag.description %></td>
                    <td>
                      <div class="btn-group">
                        <button type="button" class="btn btn-sm btn-outline-primary" onclick="editTag('<%= tag._id %>')">
                          <i class="fas fa-edit"></i>
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteTag('<%= tag._id %>')">
                          <i class="fas fa-trash"></i>
                        </button>
                      </div>
                    </td>
                  </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </main>
  </div>
</div>

<!-- Add Tag Modal -->
<div class="modal fade" id="addTagModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Thêm thẻ mới</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <form id="addTagForm">
          <div class="mb-3">
            <label class="form-label">Tên thẻ</label>
            <input type="text" class="form-control" name="name" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Mô tả</label>
            <textarea class="form-control" name="description" rows="3"></textarea>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
        <button type="button" class="btn btn-primary" onclick="submitAddTag()">Thêm</button>
      </div>
    </div>
  </div>
</div>

<!-- Edit Tag Modal -->
<div class="modal fade" id="editTagModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Chỉnh sửa thẻ</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <form id="editTagForm">
          <input type="hidden" name="tagId">
          <div class="mb-3">
            <label class="form-label">Tên thẻ</label>
            <input type="text" class="form-control" name="name" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Mô tả</label>
            <textarea class="form-control" name="description" rows="3"></textarea>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
        <button type="button" class="btn btn-primary" onclick="submitEditTag()">Cập nhật</button>
      </div>
    </div>
  </div>
</div>

<script>
let editModal;
let addModal;

document.addEventListener('DOMContentLoaded', function() { 
  editModal = new bootstrap.Modal(document.getElementById('editTagModal'));
  addModal = new bootstrap.Modal(document.getElementById('addTagModal'));
   
  document.getElementById('addTagModal').addEventListener('hidden.bs.modal', function () {
    document.getElementById('addTagForm').reset();
  });
  
  document.getElementById('editTagModal').addEventListener('hidden.bs.modal', function () {
    document.getElementById('editTagForm').reset();
  });
});
 
function submitAddTag() {
  const form = document.getElementById('addTagForm');
  const formData = new FormData(form);
  
  fetch('/admin/tags/add', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(Object.fromEntries(formData))
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      addModal.hide();
      location.reload();
    } else {
      alert(data.message || 'Lỗi khi thêm thẻ');
    }
  })
  .catch(error => {
    console.error('Error:', error);
    alert('Lỗi khi thêm thẻ');
  });
}
 
function editTag(tagId) {
  fetch(`/admin/tags/detail/${tagId}`)
    .then(response => response.json())
    .then(result => {
      if (result.success) {
        const tag = result.data;
        const form = document.getElementById('editTagForm');
        form.tagId.value = tag._id;
        form.name.value = tag.name;
        form.description.value = tag.description || '';
        
        editModal.show();
      } else {
        alert(result.message || 'Lỗi khi tải thông tin thẻ');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Lỗi khi tải thông tin thẻ');
    });
}

function submitEditTag() {
  const form = document.getElementById('editTagForm');
  const formData = new FormData(form);
  const tagId = formData.get('tagId');
  
  fetch(`/admin/tags/update/${tagId}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(Object.fromEntries(formData))
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      editModal.hide();
      location.reload();
    } else {
      alert(data.message || 'Lỗi khi cập nhật thẻ');
    }
  })
  .catch(error => {
    console.error('Error:', error);
    alert('Lỗi khi cập nhật thẻ');
  });
}
 
function deleteTag(tagId) {
  if (confirm('Bạn có chắc chắn muốn xóa thẻ này?')) {
    fetch(`/admin/tags/delete/${tagId}`, {
      method: 'GET'
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        location.reload();
      } else {
        alert(data.message || 'Lỗi khi xóa thẻ');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Lỗi khi xóa thẻ');
    });
  }
}
</script>

</body>
</html> 