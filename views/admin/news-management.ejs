<%- include('../layout/admin-header') %>

<head>
  <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
  <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</head>

<div class="container-fluid">
  <div class="row">
    <!-- Sidebar -->
    <%- include('../layout/admin-sidebar') %>

    <!-- Main content -->
    <main class="col-md-10 ms-sm-auto px-md-4">
      <div class="container mt-5">
        <h1 class="mb-4">Quản Lý Bài Viết</h1>

        <!-- Nút Thêm Bài Viết Mới -->
        <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#createNewsModal">
          Thêm Bài Viết Mới
        </button>

        <!-- Bảng Danh Sách Bài Viết -->
        <table class="table table-striped">
          <thead>
            <tr>
              <th>Tiêu Đề</th>
              <th>Tác Giả</th>
              <th>Danh Mục</th>
              <th>Thẻ</th>
              <th>Trạng Thái</th>
              <th>Hành Động</th>
            </tr>
          </thead>
          <tbody>
            <% if (news && news.length > 0) { %>
              <% news.forEach(function(article) { %>
                <tr>
                  <td><%= article.title %></td>
                  <td><%= article.author ? article.author.username : 'Không xác định' %></td>
                  <td><%= article.category ? article.category.name : 'Không có danh mục' %></td>
                  <td>
                    <% if (article.tags && article.tags.length > 0) { %>
                      <% article.tags.forEach(function(tag) { %>
                        <span class="badge bg-secondary me-1"><%= tag.name %></span>
                      <% }); %>
                    <% } else { %>
                      <span class="text-muted">Không có thẻ</span>
                    <% } %>
                  </td>
                  <td>
                    <span class="badge <%= article.status === 'published' ? 'bg-success' : 'bg-warning' %>">
                      <%= article.status === 'published' ? 'Đã xuất bản' : 'Nháp' %>
                    </span>
                  </td>
                  <td>
                    <button class="btn btn-sm btn-warning edit-news" 
                      data-id="<%= article._id %>"
                      data-title="<%= article.title %>"
                      data-content="<%= article.content %>"
                      data-category="<%= article.category ? article.category._id : '' %>"
                      data-status="<%= article.status %>"
                      data-tags="<%= article.tags ? article.tags.map(tag => tag._id).join(',') : '' %>"
                      data-image="<%= article.imageUrl %>"
                      data-bs-toggle="modal" 
                      data-bs-target="#editNewsModal">
                      <i class="fas fa-edit"></i> Sửa
                    </button>
                    <a href="/admin/news/delete/<%= article._id %>" 
                       class="btn btn-sm btn-danger" 
                       onclick="return confirm('Bạn chắc chắn muốn xóa bài viết này?')">
                      <i class="fas fa-trash"></i> Xóa
                    </a>
                  </td>
                </tr>
              <% }); %>
            <% } else { %>
              <tr>
                <td colspan="6" class="text-center">Chưa có bài viết nào</td>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>

      <!-- Modal Thêm Bài Viết -->
      <div class="modal fade" id="createNewsModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Thêm Bài Viết Mới</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="createNewsForm" action="/admin/news/create" method="POST" enctype="multipart/form-data">
              <div class="modal-body">
                <div class="mb-3">
                  <label class="form-label">Tiêu Đề</label>
                  <input type="text" class="form-control" name="title" required>
                </div>
                <div class="mb-3">
                  <label class="form-label">Nội Dung</label>
                  <textarea id="createContent" class="form-control" name="content" rows="5"></textarea>
                </div>
                <div class="mb-3">
                  <label class="form-label">Danh Mục</label>
                  <select class="form-select" name="category" required>
                    <% categories.forEach(function(category) { %>
                      <option value="<%= category._id %>"><%= category.name %></option>
                    <% }); %>
                  </select>
                </div>
                <div class="mb-3">
                  <label class="form-label">Ảnh Bài Viết</label>
                  <input type="file" class="form-control" name="imageUrl" accept="image/*" onchange="previewImage(this, 'createImagePreview')">
                  <div class="mt-2" id="createImagePreview" style="display: none;">
                    <img src="" alt="Preview" class="img-thumbnail" style="max-height: 200px;">
                    <button type="button" class="btn btn-sm btn-danger mt-2" onclick="removeImage('createImagePreview', this.previousElementSibling.previousElementSibling)">
                      <i class="fas fa-times"></i> Xóa ảnh
                    </button>
                  </div>
                </div>
                <div class="mb-3">
                  <label class="form-label">Thẻ</label>
                  <select class="form-select" name="tags" id="createTags" multiple>
                    <% tags.forEach(function(tag) { %>
                      <option value="<%= tag._id %>"><%= tag.name %></option>
                    <% }); %>
                  </select>
                </div>
                <div class="mb-3">
                  <label class="form-label">Trạng Thái</label>
                  <select class="form-select" name="status">
                    <option value="draft">Nháp</option>
                    <option value="published">Xuất Bản</option>
                  </select>
                </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="submit" class="btn btn-primary">Lưu Bài Viết</button>
              </div>
            </form>
          </div>
        </div>
      </div>

      <!-- Modal Chỉnh Sửa Bài Viết -->
      <div class="modal fade" id="editNewsModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Chỉnh Sửa Bài Viết</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="editNewsForm" action="" method="POST" enctype="multipart/form-data" novalidate>
              <div class="modal-body">
                <div class="mb-3">
                  <label class="form-label">Tiêu Đề</label>
                  <input type="text" class="form-control" name="title" id="editTitle" required>
                </div>
                <div class="mb-3">
                  <label class="form-label">Nội Dung</label>
                  <textarea id="editContent" class="form-control" name="content" rows="5"></textarea>
                </div>
                <div class="mb-3">
                  <label class="form-label">Danh Mục</label>
                  <select class="form-select" name="category" id="editCategory" required>
                    <% categories.forEach(function(category) { %>
                      <option value="<%= category._id %>"><%= category.name %></option>
                    <% }); %>
                  </select>
                </div>
                <div class="mb-3">
                  <label class="form-label">Ảnh Bài Viết</label>
                  <input type="file" class="form-control" name="imageUrl" accept="image/*" onchange="previewImage(this, 'editImagePreview')">
                  <div class="mt-2" id="editImagePreview" style="display: none;">
                    <img src="" alt="Preview" class="img-thumbnail" style="max-height: 200px;">
                    <button type="button" class="btn btn-sm btn-danger mt-2" onclick="removeImage('editImagePreview', this.previousElementSibling.previousElementSibling)">
                      <i class="fas fa-times"></i> Xóa ảnh
                    </button>
                  </div>
                  <div id="currentImage" class="mt-2">
                    <!-- Hiển thị ảnh hiện tại nếu có -->
                  </div>
                </div>
                <div class="mb-3">
                  <label class="form-label">Thẻ</label>
                  <select class="form-select" name="tags" id="editTags" multiple>
                    <% tags.forEach(function(tag) { %>
                      <option value="<%= tag._id %>"><%= tag.name %></option>
                    <% }); %>
                  </select>
                </div>
                <div class="mb-3">
                  <label class="form-label">Trạng Thái</label>
                  <select class="form-select" name="status" id="editStatus">
                    <option value="draft">Nháp</option>
                    <option value="published">Xuất Bản</option>
                  </select>
                </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="submit" class="btn btn-primary">Cập Nhật Bài Viết</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </main>
  </div>
</div>

<!-- Scripts -->
<script src="https://cdn.ckeditor.com/ckeditor5/40.0.0/classic/ckeditor.js"></script>
<script>
$(document).ready(function() {
  // Khởi tạo CKEditor cho form tạo mới
  let createEditor;
  if (document.querySelector('#createContent')) {
    ClassicEditor
      .create(document.querySelector('#createContent'), {
        toolbar: ['heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|', 'outdent', 'indent', '|', 'blockQuote', 'insertTable', 'undo', 'redo'],
        language: 'vi'
      })
      .then(editor => {
        createEditor = editor;
        console.log('CKEditor tạo mới đã được khởi tạo');
      })
      .catch(error => {
        console.error('Lỗi khởi tạo CKEditor tạo mới:', error);
      });
  }

  // Khởi tạo CKEditor cho form chỉnh sửa
  let editEditor;
  if (document.querySelector('#editContent')) {
    ClassicEditor
      .create(document.querySelector('#editContent'), {
        toolbar: ['heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|', 'outdent', 'indent', '|', 'blockQuote', 'insertTable', 'undo', 'redo'],
        language: 'vi'
      })
      .then(editor => {
        editEditor = editor;
        console.log('CKEditor chỉnh sửa đã được khởi tạo');
      })
      .catch(error => {
        console.error('Lỗi khởi tạo CKEditor chỉnh sửa:', error);
      });
  }

  // Khởi tạo Select2 cho form tạo mới
  if ($('#createTags').length) {
    $('#createTags').select2({
      placeholder: 'Chọn thẻ',
      allowClear: true,
      dropdownParent: $('#createNewsModal')
    });
  } 
  if ($('#editTags').length) {
    $('#editTags').select2({
      placeholder: 'Chọn thẻ',
      allowClear: true,
      dropdownParent: $('#editNewsModal')
    });
  } 
  $('.edit-news').click(function() {
    console.log('Nút sửa được click');
    const id = $(this).data('id');
    const title = $(this).data('title');
    const content = $(this).data('content');
    const category = $(this).data('category');
    const status = $(this).data('status');
    const tags = $(this).data('tags').split(',').filter(tag => tag !== '');
    const imageUrl = $(this).data('image');

    $('#editNewsForm').attr('action', `/admin/news/edit/${id}`);
    $('#editTitle').val(title);
    if (editEditor) {
      editEditor.setData(content);
    }
    $('#editCategory').val(category);
    $('#editStatus').val(status);
    $('#editTags').val(tags).trigger('change');

    // Hiển thị ảnh hiện tại nếu có
    const currentImage = document.getElementById('currentImage');
    if (imageUrl) {
      currentImage.innerHTML = `
        <img src="${imageUrl}" alt="Current image" class="img-thumbnail" style="max-height: 200px;" onerror="this.src='/images/default-news.jpg'">
        <p class="text-muted mt-1">Ảnh hiện tại</p>
      `;
      currentImage.style.display = 'block';
    } else {
      currentImage.innerHTML = `
        <img src="/images/default-news.jpg" alt="Default image" class="img-thumbnail" style="max-height: 200px;">
        <p class="text-muted mt-1">Ảnh mặc định</p>
      `;
      currentImage.style.display = 'block';
    }
 
    const editImagePreview = document.getElementById('editImagePreview');
    editImagePreview.style.display = 'none';
    editImagePreview.querySelector('img').src = '';
  });
 
  $('#editNewsForm').on('submit', function(e) {
    e.preventDefault();
    console.log('Form chỉnh sửa được submit');
     
    const content = editEditor ? editEditor.getData() : '';
     
    const formData = new FormData(this);
    formData.set('content', content);
     
    fetch(this.action, {
      method: 'POST',
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        location.reload();
      } else {
        alert(data.message || 'Có lỗi xảy ra');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Có lỗi xảy ra khi cập nhật bài viết');
    });
  });
 
  $('#createNewsForm').on('submit', function(e) {
    e.preventDefault();
    console.log('Form tạo mới được submit');
    
 
    const content = createEditor ? createEditor.getData() : '';
 
    const formData = new FormData(this);
    formData.set('content', content);
    
 
    fetch(this.action, {
      method: 'POST',
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        location.reload();
      } else { 
        const alertDiv = document.createElement('div');
        alertDiv.className = 'alert alert-danger alert-dismissible fade show';
        alertDiv.innerHTML = `
          ${data.message}
          <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
         
        this.insertBefore(alertDiv, this.firstChild);
         
        setTimeout(() => {
          alertDiv.remove();
        }, 5000);
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Có lỗi xảy ra khi tạo bài viết');
    });
  });
});

function previewImage(input, previewId) {
  const preview = document.getElementById(previewId);
  const previewImg = preview.querySelector('img');
  
  if (input.files && input.files[0]) {
    const reader = new FileReader();
    
    reader.onload = function(e) {
      previewImg.src = e.target.result;
      preview.style.display = 'block';
       
      if (previewId === 'editImagePreview') {
        const currentImage = document.getElementById('currentImage');
        if (currentImage) {
          currentImage.style.display = 'none';
        }
      }
    }
    
    reader.readAsDataURL(input.files[0]);
  }
}

function removeImage(previewId, inputElement) {
  const preview = document.getElementById(previewId);
  const previewImg = preview 
  inputElement.value = ''; 
  previewImg.src = '';
  preview.style.display = 'none';
   
  if (previewId === 'editImagePreview') {
    const currentImage = document.getElementById('currentImage');
    if (currentImage) {
      currentImage.style.display = 'block';
    }
  }
}
</script>

</body>
</html>
