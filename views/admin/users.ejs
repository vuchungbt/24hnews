<%- include('../layout/admin-header') %>

<!-- Thêm Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

<div class="container-fluid">
  <div class="row">
    <!-- Sidebar -->
    <%- include('../layout/admin-sidebar') %>

    <!-- Main content -->
    <main class="col-md-10 ms-sm-auto px-md-4">
      <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">Quản lý người dùng</h1>
        <div class="btn-toolbar mb-2 mb-md-0">
          <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addUserModal">
            <i class="fas fa-user-plus me-2"></i>Thêm người dùng
          </button>
        </div>
      </div>

      <!-- Filters -->
      <div class="card mb-4">
        <div class="card-body">
          <form class="row g-3">
            <div class="col-md-3">
              <input type="text" class="form-control" placeholder="Tìm kiếm theo tên hoặc email">
            </div>
            <div class="col-md-2">
              <select class="form-select">
                <option value="">Tất cả vai trò</option>
                <option value="user">Người dùng</option>
                <option value="admin">Admin</option>
                <option value="editor">Biên tập viên</option>
              </select>
            </div>
            <div class="col-md-2">
              <select class="form-select">
                <option value="">Tất cả trạng thái</option>
                <option value="active">Hoạt động</option>
                <option value="inactive">Không hoạt động</option>
                <option value="banned">Bị khóa</option>
              </select>
            </div>
            <div class="col-md-2">
              <button type="submit" class="btn btn-primary w-100">
                <i class="fas fa-search me-2"></i>Lọc
              </button>
            </div>
          </form>
        </div>
      </div>

      <!-- Users Table -->
      <div class="card">
        <div class="card-body">
          <div class="table-responsive">
            <table class="table table-hover">
              <thead>
                <tr>
                  <th>ID</th>
                  <th>Tên người dùng</th>
                  <th>Email</th>
                  <th>Vai trò</th>
                  <th>Trạng thái</th>
                  <th>Ngày tạo</th>
                  <th>Thao tác</th>
                </tr>
              </thead>
              <tbody>
                <% users.forEach(user => { %>
                  <tr>
                    <td><%= user._id %></td>
                    <td>
                      <div class="d-flex align-items-center">
                        <img src="<%= user.avatar %>" class="rounded-circle me-2" width="32" height="32">
                        <%= user.username %>
                      </div>
                    </td>
                    <td><%= user.email %></td>
                    <td>
                      <span class="badge bg-<%= user.role === 'admin' ? 'danger' : user.role === 'editor' ? 'warning' : 'info' %>">
                        <%= user.role %>
                      </span>
                    </td>
                    <td>
                      <span class="badge bg-<%= user.status === 'active' ? 'success' : user.status === 'inactive' ? 'secondary' : 'danger' %>">
                        <%= user.status %>
                      </span>
                    </td>
                    <td><%= new Date(user.createdAt).toLocaleDateString('vi-VN') %></td>
                    <td>
                      <div class="btn-group">
                        <button type="button" class="btn btn-sm btn-outline-primary" onclick="editUser('<%= user._id %>')">
                          <i class="fas fa-edit"></i>
                        </button>
                        <% if (typeof currentUser !== 'undefined' && currentUser && currentUser.role === 'admin' && user.role !== 'admin' && user._id.toString() !== currentUser._id.toString()) { %>
                          <button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteUser('<%= user._id %>', '<%= user.username %>')">
                            <i class="fas fa-trash"></i>
                          </button>
                        <% } %>
                      </div>
                    </td>
                  </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </main>
  </div>
</div>

<!-- Add User Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Thêm người dùng mới</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <form id="addUserForm" onsubmit="event.preventDefault(); submitAddUser();">
          <div class="mb-3">
            <label class="form-label">Tên người dùng</label>
            <input type="text" class="form-control" name="username" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Email</label>
            <input type="email" class="form-control" name="email" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Mật khẩu</label>
            <input type="password" class="form-control" name="password" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Vai trò</label>
            <select class="form-select" name="role" required>
              <option value="user">Người dùng</option>
              <option value="editor">Biên tập viên</option>
              <option value="admin">Admin</option>
            </select>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
            <button type="submit" class="btn btn-primary" id="submitAddUserBtn">Thêm</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Chỉnh sửa người dùng</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <form id="editUserForm" onsubmit="event.preventDefault(); submitEditUser();">
          <input type="hidden" name="userId">
          <div class="mb-3">
            <label class="form-label">Tên người dùng</label>
            <input type="text" class="form-control" name="username" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Email</label>
            <input type="email" class="form-control" name="email" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Mật khẩu mới (để trống nếu không muốn thay đổi)</label>
            <input type="password" class="form-control" name="password">
          </div>
          <div class="mb-3">
            <label class="form-label">Vai trò</label>
            <select class="form-select" name="role" required>
              <option value="user">Người dùng</option>
              <option value="editor">Biên tập viên</option>
              <option value="admin">Admin</option>
            </select>
          </div>
          <div class="mb-3">
            <label class="form-label">Trạng thái</label>
            <select class="form-select" name="status" required>
              <option value="active">Hoạt động</option>
              <option value="inactive">Không hoạt động</option>
              <option value="banned">Bị khóa</option>
            </select>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
            <button type="submit" class="btn btn-primary" id="submitEditUserBtn">Cập nhật</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
// Add User
function submitAddUser() {
  const form = document.getElementById('addUserForm');
  const submitBtn = document.getElementById('submitAddUserBtn');
  const formData = new FormData(form);
   
  const originalBtnText = submitBtn.innerHTML;
  submitBtn.disabled = true;
  submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Đang xử lý...';

  fetch('/admin/users/create', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(Object.fromEntries(formData))
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) { 
      const alertDiv = document.createElement('div');
      alertDiv.className = 'alert alert-success alert-dismissible fade show';
      alertDiv.innerHTML = `
        ${data.message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      `;
      form.insertAdjacentElement('beforebegin', alertDiv);
       
      form.reset();
      const modal = bootstrap.Modal.getInstance(document.getElementById('addUserModal'));
      modal.hide();
       
      setTimeout(() => {
        window.location.reload();
      }, 1000);
    } else { 
      const alertDiv = document.createElement('div');
      alertDiv.className = 'alert alert-danger alert-dismissible fade show';
      alertDiv.innerHTML = `
        ${data.message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      `;
      form.insertAdjacentElement('beforebegin', alertDiv);
    }
  })
  .catch(error => {
    console.error('Error:', error); 
    const alertDiv = document.createElement('div');
    alertDiv.className = 'alert alert-danger alert-dismissible fade show';
    alertDiv.innerHTML = `
      Lỗi khi thêm người dùng. Vui lòng thử lại sau.
      <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    form.insertAdjacentElement('beforebegin', alertDiv);
  })
  .finally(() => { 
    submitBtn.disabled = false;
    submitBtn.innerHTML = originalBtnText;
  });
}

// Edit User
function editUser(userId) {
  fetch(`/admin/users/${userId}`)
    .then(response => response.json())
    .then(user => {
      const form = document.getElementById('editUserForm');
      form.userId.value = user._id;
      form.username.value = user.username;
      form.email.value = user.email;
      form.role.value = user.role;
      form.status.value = user.status;
      
      new bootstrap.Modal(document.getElementById('editUserModal')).show();
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Lỗi khi tải thông tin người dùng');
    });
}

function submitEditUser() {
  const form = document.getElementById('editUserForm');
  const submitBtn = document.getElementById('submitEditUserBtn');
  const formData = new FormData(form);
  const userId = formData.get('userId');
   
  const originalBtnText = submitBtn.innerHTML;
  submitBtn.disabled = true;
  submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Đang xử lý...';

  fetch(`/admin/users/${userId}`, {
    method: 'PUT',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(Object.fromEntries(formData))
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) { 
      const alertDiv = document.createElement('div');
      alertDiv.className = 'alert alert-success alert-dismissible fade show';
      alertDiv.innerHTML = `
        ${data.message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      `;
      form.insertAdjacentElement('beforebegin', alertDiv);
       
      form.reset();
      const modal = bootstrap.Modal.getInstance(document.getElementById('editUserModal'));
      modal.hide();
       
      setTimeout(() => {
        window.location.reload();
      }, 1000);
    } else { 
      const alertDiv = document.createElement('div');
      alertDiv.className = 'alert alert-danger alert-dismissible fade show';
      alertDiv.innerHTML = `
        ${data.message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      `;
      form.insertAdjacentElement('beforebegin', alertDiv);
    }
  })
  .catch(error => {
    console.error('Error:', error); 
    const alertDiv = document.createElement('div');
    alertDiv.className = 'alert alert-danger alert-dismissible fade show';
    alertDiv.innerHTML = `
      Lỗi khi cập nhật thông tin người dùng. Vui lòng thử lại sau.
      <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    form.insertAdjacentElement('beforebegin', alertDiv);
  })
  .finally(() => { 
    submitBtn.disabled = false;
    submitBtn.innerHTML = originalBtnText;
  });
}

// Delete User
function deleteUser(userId, username) {
  if (confirm(`Bạn có chắc chắn muốn xóa người dùng "${username}"?`)) {
    const deleteBtn = event.currentTarget;
    const originalBtnHtml = deleteBtn.innerHTML;
 
    deleteBtn.disabled = true;
    deleteBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';

    fetch(`/admin/users/${userId}`, {
      method: 'DELETE'
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) { 
        const alertDiv = document.createElement('div');
        alertDiv.className = 'alert alert-success alert-dismissible fade show';
        alertDiv.innerHTML = `
          ${data.message}
          <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        document.querySelector('.card-body').insertAdjacentElement('afterbegin', alertDiv);
         
        setTimeout(() => {
          window.location.reload();
        }, 1000);
      } else { 
        const alertDiv = document.createElement('div');
        alertDiv.className = 'alert alert-danger alert-dismissible fade show';
        alertDiv.innerHTML = `
          ${data.message}
          <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        document.querySelector('.card-body').insertAdjacentElement('afterbegin', alertDiv);
      }
    })
    .catch(error => {
      console.error('Error:', error); 
      const alertDiv = document.createElement('div');
      alertDiv.className = 'alert alert-danger alert-dismissible fade show';
      alertDiv.innerHTML = `
        Lỗi khi xóa người dùng. Vui lòng thử lại sau.
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      `;
      document.querySelector('.card-body').insertAdjacentElement('afterbegin', alertDiv);
    })
    .finally(() => { 
      deleteBtn.disabled = false;
      deleteBtn.innerHTML = originalBtnHtml;
    });
  }
}
</script>

</body>
</html>
