<%- include('../layout/admin-header') %>

<!-- Thêm Bootstrap JS và jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

<div class="container-fluid">
  <div class="row">
    <!-- Sidebar -->
    <%- include('../layout/admin-sidebar') %>

    <!-- Main content -->
    <main class="col-md-10 ms-sm-auto px-md-4">
      <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">Quản lý danh mục</h1>
        <div class="btn-toolbar mb-2 mb-md-0">
          <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
            <i class="fas fa-plus me-2"></i>Thêm danh mục mới
          </button>
        </div>
      </div>

      <!-- Categories Table -->
      <div class="card">
        <div class="card-body">
          <div class="table-responsive">
            <table class="table table-hover">
              <thead>
                <tr>
                  <th>ID</th>
                  <th>Tên danh mục</th>
                  <th>Slug</th>
                  <th>Danh mục cha</th>
                  <th>Cấp</th>
                  <th>Mô tả</th>
                  <th>Số bài viết</th>
                  <th>Thao tác</th>
                </tr>
              </thead>
              <tbody>
                <% categories.forEach(category => { %>
                  <tr>
                    <td><%= category._id %></td>
                    <td>
                      <span class="category-name" style="--level: <%= category.level %>">
                        <%= category.name %>
                      </span>
                    </td>
                    <td><%= category.slug %></td>
                    <td><%= category.parent ? category.parent.name : 'Không có' %></td>
                    <td><%= category.level %></td>
                    <td><%= category.description %></td>
                    <td><%= category.postCount || 0 %></td>
                    <td>
                      <div class="btn-group">
                        <button type="button" class="btn btn-sm btn-outline-primary" onclick="editCategory('<%= category._id %>')">
                          <i class="fas fa-edit"></i>
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteCategory('<%= category._id %>')">
                          <i class="fas fa-trash"></i>
                        </button>
                      </div>
                    </td>
                  </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </main>
  </div>
</div>

<!-- Add Category Modal -->
<div class="modal fade" id="addCategoryModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Thêm danh mục mới</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <form id="addCategoryForm">
          <div class="mb-3">
            <label class="form-label">Tên danh mục</label>
            <input type="text" class="form-control" name="name" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Danh mục cha</label>
            <select class="form-select" name="parent">
              <option value="">Không có</option>
              <% categories.filter(cat => cat.level === 0).forEach(category => { %>
                <option value="<%= category._id %>"><%= category.name %></option>
              <% }) %>
            </select>
          </div>
          <div class="mb-3">
            <label class="form-label">Mô tả</label>
            <textarea class="form-control" name="description" rows="3"></textarea>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
        <button type="button" class="btn btn-primary" onclick="submitAddCategory()">Thêm</button>
      </div>
    </div>
  </div>
</div>

<!-- Edit Category Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Chỉnh sửa danh mục</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <form id="editCategoryForm">
          <input type="hidden" name="categoryId">
          <div class="mb-3">
            <label class="form-label">Tên danh mục</label>
            <input type="text" class="form-control" name="name" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Danh mục cha</label>
            <select class="form-select" name="parent">
              <option value="">Không có</option>
              <% categories.filter(cat => cat.level === 0).forEach(category => { %>
                <option value="<%= category._id %>"><%= category.name %></option>
              <% }) %>
            </select>
          </div>
          <div class="mb-3">
            <label class="form-label">Mô tả</label>
            <textarea class="form-control" name="description" rows="3"></textarea>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
        <button type="button" class="btn btn-primary" onclick="submitEditCategory()">Cập nhật</button>
      </div>
    </div>
  </div>
</div>

<style>
.category-name {
  display: inline-block;
  padding-left: calc(var(--level) * 20px);
}
</style>

<script>
function submitAddCategory() {
  const form = document.getElementById('addCategoryForm');
  const formData = new FormData(form);
  
  fetch('/api/categories/add', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(Object.fromEntries(formData))
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      location.reload();
    } else {
      alert(data.message || 'Lỗi khi thêm danh mục');
    }
  })
  .catch(error => {
    console.error('Error:', error);
    alert('Lỗi khi thêm danh mục');
  });
}

function editCategory(categoryId) {
  fetch(`/api/categories/detail/${categoryId}`)
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.json();
    })
    .then(result => {
      if (result.success) {
        const category = result.data;
        const form = document.getElementById('editCategoryForm');
        form.categoryId.value = category._id;
        form.name.value = category.name;
        form.parent.value = category.parent ? category.parent._id : '';
        form.description.value = category.description || '';
        
        new bootstrap.Modal(document.getElementById('editCategoryModal')).show();
      } else {
        alert(result.message || 'Lỗi khi tải thông tin danh mục');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Lỗi khi tải thông tin danh mục');
    });
}

function submitEditCategory() {
  const form = document.getElementById('editCategoryForm');
  const formData = new FormData(form);
  const categoryId = formData.get('categoryId');
  
  fetch(`/api/categories/update/${categoryId}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(Object.fromEntries(formData))
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      location.reload();
    } else {
      alert(data.message || 'Lỗi khi cập nhật danh mục');
    }
  })
  .catch(error => {
    console.error('Error:', error);
    alert('Lỗi khi cập nhật danh mục');
  });
}

function deleteCategory(categoryId) {
  if (confirm('Bạn có chắc chắn muốn xóa danh mục này? Tất cả danh mục con cũng sẽ bị xóa.')) {
    fetch(`/api/categories/delete/${categoryId}`, {
      method: 'GET'
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        location.reload();
      } else {
        alert(data.message || 'Lỗi khi xóa danh mục');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Lỗi khi xóa danh mục');
    });
  }
}

document.addEventListener('DOMContentLoaded', function() {
  const addModal = document.getElementById('addCategoryModal');
  const editModal = document.getElementById('editCategoryModal');
  
  addModal.addEventListener('hidden.bs.modal', function () {
    document.getElementById('addCategoryForm').reset();
  });
  
  editModal.addEventListener('hidden.bs.modal', function () {
    document.getElementById('editCategoryForm').reset();
  });
});
</script>

</body>
</html>
